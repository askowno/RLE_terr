------------------------------------------------------------------------

---
title: "Terrestrial Red List of Ecosystems (South Africa)"
subtitle: "Spatial analysis workflow - RLE Criteria B1" 
author: "SANBI"
date: November 2024
format: 
 html:
  toc: true
  toc-location: left
  embed-resources: true
editor: visual
execute: 
  eval: false
bibliography: references.bib
---

### Background

The redlistr package [@lee2017] uses raster based steps to compute EOO for the remaining extent of each ecosystem type - which forms the basis of Criterion B1 assessments in the RLE. Computational limitations required use of 120m x 120m raster resolution. This is not ideal for very small features; for example coral reefs, kelp beds or forest patches. To address this the Terra and SF packages were used to create an alternative workflow that can use vector data of ecosystems or smaller raster cells (20m).

### Load packages

```{r}
# Load necessary libraries
library(sf)
library(tidyverse)
library(terra)
library(PROJ) # if you dont load this something happens that prevents Terra reading the proj file of the imported data (due to a postgres conflict)

```

### Add Data

Import vegetation map 2024 (Jan 2025 version) from the ESRI geodatabase and the land cover map (4 class version) for 2022. The Terra and SF packages can handle many formats (shapefile, geopackage, geotif etc). For this terrestrial application the vegetation and land cover data need to be combined to create a remnants layer. For marine / freshwater applications where building a remnants layer may be unnecessary the vector data of the ecosystem features can be use used directly and no rasterization and masking steps are required.

```{r}
#  make vegrem in R
veg <- vect("C:/Users/skownoa/Dropbox/NBAwork/NLC_change/NLC_change.gdb", "NVM2024Final_IEM5_12_07012025")
lc <- rast("C:/Users/skownoa/Dropbox/NBAwork/NLC_change/nlc2022_7class.tif")

vegrast <- rasterize(veg,lc,"T_MAPCODE") 

# Create a mask for land cover values 2 and 4
mask <- (lc !=1)
# Apply the mask to raster_A
vegrem <- mask(vegrast, mask, maskvalue=TRUE)
```

### Prepare the data for analysis

Convert the raster of vegetation remnants to a Spatvector (terra object) ensuring the features with common value are dissolved (making multipart features). Then convert the Spatvector to a simple features (sf) object for use in the SF package.

```{r}
#convert spatrast to spatvect and then to sf object (simple features)
veg_poly <- as.polygons(vegrem, dissolve = TRUE) 
veg_sf <- st_as_sf(veg_poly) 
# remove Null rows
veg_sf <- veg_sf %>%
  filter(!is.na(T_MAPCODE))
```

### Compute convex hull area per veg type using remnants data

Use a for loop to compute the EOO for each ecosystem type usingt he T_MAPCODE attribute field. SF package has a function called convex_hull which computes EOO.

```{r}
# Initialize a list to store results
results_list <- list()

# Iterate through unique T_MAPCODE values 
for (mapcode in unique(veg_sf$T_MAPCODE)) {
  subset_data <- veg_sf %>% filter(T_MAPCODE == mapcode)
  if (nrow(subset_data) > 0) {
    convex_hull <- st_convex_hull(st_union(subset_data))
    hull_area <- st_area(convex_hull)
    results_list[[mapcode]] <- as.numeric(hull_area)
  }
}

results_df <- data.frame(
  T_MAPCODE = names(results_list),
  Area = unlist(results_list)
)

write.csv(results_df, "outputs/results_df_B1_EOO_all.csv")
```
